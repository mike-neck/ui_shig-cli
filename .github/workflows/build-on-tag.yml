name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target-arch:
          - any
          - amd64
          - arm64
    permissions:
      contents: write
    name: "Build[${{ matrix.target-arch }}]"
    steps:

      - name: Install dependencies arm64
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev:arm64 \
            g++-aarch64-linux-gnu
        if: ${{ matrix.target-arch == 'arm64' }}

      - name: Install dependencies amd64
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev
        if: ${{ matrix.target-arch == 'amd64' }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Get ReleaseID
        id: releaseId
        run: |
          echo "::set-output name=value::$(scripts/get-release-id.sh)"

      - name: Init project
        run: make init

      - name: Build
        run: make build-all
        shell: bash
        env:
          TARGET_ARCH: "${{ matrix.target-arch }}"

      - name: Archive binaries
        run: make archive-all
        shell: bash

      - name: Upload archives
        run: make upload-all
        env:
          RELEASE_ID: "${{ steps.releaseId.outputs.value }}"
